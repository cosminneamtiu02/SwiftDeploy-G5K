name: Shell quality

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      debug:
        description: "Enable debug mode (prints more logs, runs self-test)"
        type: boolean
        default: false

permissions:
  contents: read
  pull-requests: write
  checks: write
  security-events: write

env:
  DEBUG: ${{ (github.event_name == 'workflow_dispatch' && inputs.debug)
           || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'ci-debug')) }}
  SHELL_PATHS_FILE: ".shell_paths"

jobs:
  # ========== 0) Sanity/self-test (only in debug mode) ==========
  sanity_debug:
    name: Sanity & self-test
    runs-on: ubuntu-latest
    if: env.DEBUG == 'true'

    steps:
      - uses: actions/checkout@v4
      - name: Install tools
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y shellcheck
          SHFMT_VERSION=3.9.0
          curl -sSL https://github.com/mvdan/sh/releases/download/v${SHFMT_VERSION}/shfmt_v${SHFMT_VERSION}_linux_amd64 \
            -o /usr/local/bin/shfmt
          chmod +x /usr/local/bin/shfmt
          shellcheck --version
          shfmt -version
      - name: Create throwaway scripts (good/bad)
        run: |
          mkdir -p .ci-selftest
          echo -e '#!/usr/bin/env bash\nmsg="hello"\necho "$msg"' > .ci-selftest/good.sh
          echo -e '#!/usr/bin/env bash\nmsg=hello\necho $msg' > .ci-selftest/bad.sh
          chmod +x .ci-selftest/*.sh
      - name: shellcheck should report findings
        run: |
          set +e
          shellcheck -x -S style -f gcc .ci-selftest/*.sh
          ec=$?
          echo "exit=$ec (expect non-zero)"
          test $ec -ne 0
      - name: shfmt should show diff for bad.sh
        run: |
          if shfmt -i 2 -ci -d .ci-selftest/*.sh; then
            echo "Unexpected: no diff"; exit 1
          fi

  # ========== 1) Advisory reviewer (non-blocking) ==========
  reviewer_advice:
    name: Shell review (advisory)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y shellcheck
          SHFMT_VERSION=3.9.0
          curl -sSL https://github.com/mvdan/sh/releases/download/v${SHFMT_VERSION}/shfmt_v${SHFMT_VERSION}_linux_amd64 \
            -o /usr/local/bin/shfmt
          chmod +x /usr/local/bin/shfmt
          echo "== Versions =="; shellcheck --version; shfmt -version

      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: List reviewdog formats (debug)
        run: reviewdog -list

      - name: Find shell scripts
        id: find_files
        run: |
          git ls-files '*.sh' '*.bash' '*.zsh' > files.list
          cat files.list
          echo "count=$(wc -l < files.list)" >> $GITHUB_OUTPUT

      - name: Run shellcheck with reviewdog
        if: steps.find_files.outputs.count != '0'
        run: |
          set +e
          xargs -a files.list shellcheck -f checkstyle --external-sources --severity=style > shellcheck_checkstyle.xml || true
          echo "== shellcheck_checkstyle.xml =="
          cat shellcheck_checkstyle.xml || true
          reviewdog -f=checkstyle -name="shellcheck" \
            -reporter=github-pr-review -level=warning -filter-mode=added \
            -fail-on-error=false -tee < shellcheck_checkstyle.xml

      - name: Run shfmt with reviewdog
        if: steps.find_files.outputs.count != '0'
        run: |
          set +e
          shfmt -i 2 -ci -d $(cat files.list) > shfmt.diff || true
          echo "== shfmt.diff =="
          cat shfmt.diff || echo "No diff"
          reviewdog -f=diff -name="shfmt" \
            -reporter=github-pr-review -level=warning -filter-mode=added \
            -fail-on-error=false -tee < shfmt.diff

  # ========== 2) Gatekeeper (blocking) ==========
  gatekeeper:
    name: Shell gatekeeper (blocking)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
          SHFMT_VERSION=3.9.0
          curl -sSL https://github.com/mvdan/sh/releases/download/v${SHFMT_VERSION}/shfmt_v${SHFMT_VERSION}_linux_amd64 \
            -o /usr/local/bin/shfmt
          chmod +x /usr/local/bin/shfmt
      - name: Run shellcheck (blocking)
        run: xargs -a <(git ls-files '*.sh' '*.bash' '*.zsh') shellcheck -x -S style -e SC1090 -e SC1091
      - name: Run shfmt (blocking)
        run: shfmt -i 2 -ci -d $(git ls-files '*.sh' '*.bash' '*.zsh')
      - name: Run bash -n (syntax check)
        run: |
          set -e
          for f in $(git ls-files '*.sh' '*.bash' '*.zsh'); do
            bash -n "$f"
          done
